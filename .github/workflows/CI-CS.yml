# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 11

    ### Set up Fortify ScanCentral Client ###
    - name: Download Fortify ScanCentral Client
      uses: fortify/gha-setup-scancentral-client@v1   
      with:
        version: 21.2.2                                      # On-prem customers should specify a client version that matches their ScanCentral environment
                                                             # FoD customers usually should not specify a version but rather rely on the default version
        client-auth-token: ${{ secrets.CLIENT_AUTH_TOKEN }}  # Optional, but required if ScanCentral Controller requires client authentication

    ### Run Fortify ScanCentral Client ###
    # Update BUILD_OPTS based on the ScanCentral Client documentation and your project's included tech stack(s).
    #   ScanCentral Client will download dependencies for maven, gradle and msbuild projects.
    #   For other build tools, add your build commands to the workflow to download necessary dependencies and prepare according to Fortify SCA documentation.
    - name: Setting FQDN address
      run: |
            export RUNNER_ALLOW_RUNASROOT="1"
            export AGENT_ALLOW_RUNASROOT="1"
            sudo echo "54.198.22.254 fortify.cyberxdemo.com" | sudo tee -a /etc/hosts
    - name: Perform SAST Scan
      run: scancentral -url ${SC_CONTROLLER_URL} start $BUILD_OPTS -upload -application $APPLICATION -version $VERSION -uptoken $SSC_UPLOAD_TOKEN
      env:                                            
        SC_CONTROLLER_URL: ${{ secrets.SC_CONTROLLER_URL }}
        SSC_UPLOAD_TOKEN: ${{ secrets.SSC_UPLOAD_TOKEN }}
        #SSC_UPLOAD_TOKEN: 516147e5-15ee-4f01-a97a-00ab0b0a589d
        APPLICATION: "sCust_Proj1"
        VERSION: "1.0"
        BUILD_OPTS: "-bt mvn"
